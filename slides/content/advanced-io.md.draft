--

--
## moving
- `f.seek(index)` move cursor to index
- `f.tell()` returns cursor current index

--

## Other
- `f.flush()` flushes the write buffers
- `f.mode` read/write mode.
- `f.name` file name

--

## The `+`
- Supplying `'+'` after one of `'rwa'` is for reading and writing,
 but differ in the position in the file:
    - `'r+'` The stream is positioned at the beginning of the file.
    - `'w+'` The file is created if it does not exist, otherwise it is truncated.
    The stream is positioned at the beginning of the file.
    - `'a+'` The stream is positioned at the end of the file.

--

![](img/open-diagram.jpg)

------

# stdin / stdout / stderror
<!-- .slide: data-background="img/stdin.png" -->
--

## Definitions
- `stdin`: standard input
- `stdout`: standard output
- `stderr`: standard error

--
## stdin
- File like object
- test.py:

```python
import sys
print(sys.stdin.read())
```
- cmdline:

```bash
$ echo 'hi' | python3 test.py
hi
```

--

## stdout, stderr
- `stdout` receives all 'regular' output.
- `stderr` receives all 'error' output.
- What if we want to redirect this output?

--

## Redirecting script(1)
test.py:
```python
import sys
saveout, saverr = sys.stdout,sys.stderr
sys.stdout = open('/tmp/out.txt', 'w')
sys.stderr = open('/tmp/err.txt', 'w')
print('Hello')
printa('Hello')
sys.stdout, sys.stderr = saveout, saverr
```
--

## Redirecting script(2)
cmdline:

```bash
$ python3 stdouterr.py
$ cat /tmp/out.txt
Hello
$ cat /tmp/err.txt
Traceback (most recent call last):
  File "stdouterr.py", line 6, in <module>
    printa('Hello')
NameError: name 'printa' is not defined
```

---

